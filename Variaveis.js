//Crie uma vari√°vel cor üé®
//Crie uma vari√°vel chamada cor, que pode ter seu valor alterado e atribua √† ela o nome da cor 'verde'.
//Lembre-se de colocar a cor entre aspas simples ('').
cor = "verde";

//Atribua e reatribua valores ‚ÜîÔ∏è
//Crie uma vari√°vel chamada cidade e atribua √† ela o nome 'Parauapebas'.
//Depois, mude o nome da cidade armazenada na vari√°vel cidade para 'Rio de Janeiro'. Lembre-se de colocar o nome da cidade entre aspas simples ('').
let cidade = "Parauapebas";
cidade = "Rio de Janeiro";

console.log(cidade); // Isso ir√° imprimir 'Rio de Janeiro'

//Crie uma constante para armazenar o seu nome üè∑
//Crie uma constante chamada meuNome e atribua √† ela o seu nome entre aspas simples ('').
const meuNome = "Seu Nome"; // Substitua 'Seu Nome' pelo seu nome real entre as aspas simples

//Crie uma vari√°vel para guardar a sua idade üéà
//Crie uma vari√°vel chamada minhaIdade e atribua √† ela o n√∫mero que representa a sua idade.
let minhaIdade = 29; // Substitua 29 pela sua idade real

//Corrija o c√≥digo üíª
//O seguinte c√≥digo retorna um erro:

/*const email = email@trybe.com;
        email = outroEmail@trybe.com;*/

function corrigeCodigo() {
  try {
    /***** N√£o altere os c√≥digos acima *****/
    /***** Escreva o seu c√≥digo aqui *****/

    let email = "email@trybe.com";
    email = "outroEmail@trybe.com";

    /***** Fim do seu c√≥digo *****/
    /***** N√£o altere os c√≥digos abaixo *****/
  } catch (e) {
    return "incorrect";
  }
  return "correct";
}

/*  Crie vari√°veis de diferentes tipos üßë‚Äçüíª
Declare uma vari√°vel com o nome:

tipoTexto e atribua a ela um valor do tipo string;

tipoNumero e atribua a ela um valor do tipo number;

verdadeiro e atribua a ela um valor do tipo boolean correspondente ao nome;

falso e atribua a ela um valor do tipo boolean correspondente ao nome;

tipoNulo com o valor null;

tipoIndefinido e sem valor. */

// Vari√°vel do tipo string
let tipoTexto = "Isso √© uma string";

// Vari√°vel do tipo number
let tipoNumero = 42;

// Vari√°vel do tipo boolean (verdadeiro)
let verdadeiro = true;

// Vari√°vel do tipo boolean (falso)
let falso = false;

// Vari√°vel do tipo null
let tipoNulo = null;

// Vari√°vel do tipo undefined (n√£o atribu√≠da a nenhum valor)
let tipoIndefinido;

//Corrija os valores ‚úÖ
//No c√≥digo abaixo, os valores das vari√°veis est√£o trocados. Fa√ßa com que cada vari√°vel possua seu valor correto sem atribuir nenhum valor novo al√©m dos que j√° est√£o no c√≥digo.

/* Copiar
    let nome = true;
    let idade = 'Harry Potter';
    let souUmBruxo = 210; */

let souUmBruxo = true; // A vari√°vel souUmBruxo √© do tipo boolean, indicando se a pessoa √© ou n√£o um bruxo.
let nome = "Harry Potter"; // A vari√°vel nome √© uma string que armazena o nome do personagem.
let idade = 210; // A vari√°vel idade √© um n√∫mero que representa a idade do personagem (aproximadamente).

let escola = "Trybe";

//Qual exemplo abaixo apresenta uma boa estrutura de declara√ß√£o de variavel?
const idade = 34;

//A forma adequada de atribui;√°o de um novo valor a variavel abaixo, quem j√° esta declarada, √© encontrada em:
/*let escola = 'Trybe';*/
let escola = "que te ensina a programar, a aprender e a trabalhar";

//considera o codigo abaixo, qual o tipo primitivo usando typeof:
/*var variavel = 'O rato roeu a roupa do rei de Roma';
 
const segundaVariavel = 2;

var terceiraVariavel = false;

var quartaVariavel = '10';

let quintaVariavel = true;

console.log(typeof variavel);
console.log(typeof segundaVariavel);
console.log(typeof tereceiraVariavel);
console.log(typeof quartaVariavel);
console.log(typeof quintaVariavel);*/

var variavel = "O rato roeu a roupa do rei de Roma";
const segundaVariavel = 2;
var terceiraVariavel = false;
var quartaVariavel = "10";
let quintaVariavel = true;

console.log(typeof variavel); // string
console.log(typeof segundaVariavel); // number
console.log(typeof terceiraVariavel); // boolean
console.log(typeof quartaVariavel); // string
console.log(typeof quintaVariavel); // boolean

//I - undefined √© o tipo primitivo para uma vari√°vel sem valor atribu√≠do.
//III - null √© o tipo primitivo para uma vari√°vel que aponta para um valor ausente.
//V - Tanto o undefined quanto o null precisam da vari√°vel declarada.

//Com base na defini√ß√£o, tipos primitivos s√£o:
//R: os tipos de valores poss√≠veis de serem utilizados em seu programa.

/* O objetivo deste exerc√≠cio √© realizar a soma entre 178 e 93. Para isso: